/*
 * DO NOT EDIT THIS FILE, your changes will be overwritten
 * This is an automatically generated file.
 * It was generated with uasm, the microassembler, on
 * Sat Aug 10 00:52:20 2019
 */

/*
 * This case statement was generated with the following
 *   fields:

   wire [31:0]  DATA_out;
   wire [ 2:0]  ASEL;
   wire [ 2:0]  BSEL;
   wire [ 2:0]  DSEL;
   wire [ 3:0]  SSEL;
   wire [ 2:0]  HSEL;
   wire         MUX1;
   wire [ 2:0]  MUX2;
   wire [ 7:0]  ADRS;
   wire [ 3:0]  MISC;


   assign                 ASEL = DATA_out[31:29];    // bit size:3
   assign                 BSEL = DATA_out[28:26];    // bit size:3
   assign                 DSEL = DATA_out[25:23];    // bit size:3
   assign                 SSEL = DATA_out[22:19];    // bit size:4
   assign                 HSEL = DATA_out[18:16];    // bit size:3
   assign                 MUX1 = DATA_out[15];       // bit size:1
   assign                 MUX2 = DATA_out[14:12];    // bit size:3
   assign                 ADRS = DATA_out[11: 4];    // bit size:8
   assign                 MISC = DATA_out[ 3: 0];    // bit size:4
 *
 * Yeilding a total data width of 32 bits for 9 fields.
 * The maximum address encountered was 0xff, needing 8 bits
 */
`timescale 1ns/1ns
module NRLT_microcode_rom (ADDR_in,DATA_out);
   input  [ 7:0] ADDR_in;
   output [31:0] DATA_out;

   reg    [31:0] DATA_out_r;

   assign DATA_out = DATA_out_r;
   always @(ADDR_in)
     begin
        case(ADDR_in)
          8'h0: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0000;
          /* START: */
          8'h1: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h2: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h3: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_1001;
          8'h4: DATA_out_r = 32'b000_000_000_0000_000_1_001_00000000_0000;
          8'h8: DATA_out_r = 32'b001_000_001_0001_000_0_001_00000001_0000;
          8'h10: DATA_out_r = 32'b001_000_001_1110_000_0_001_00000001_0000;
          8'h18: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h19: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h1a: DATA_out_r = 32'b000_000_001_0000_000_0_001_00000001_0000;
          8'h20: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h21: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h22: DATA_out_r = 32'b000_001_001_0010_000_0_001_00000001_0000;
          8'h28: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h29: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h2a: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0101;
          8'h2b: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h2c: DATA_out_r = 32'b000_000_001_0000_000_0_001_00000001_0000;
          8'h30: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h31: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h32: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0101;
          8'h33: DATA_out_r = 32'b001_000_000_0000_000_0_000_00000000_0010;
          8'h34: DATA_out_r = 32'b001_000_000_0000_000_0_001_00000001_0000;
          8'h38: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0000;
          8'h39: DATA_out_r = 32'b000_000_000_0000_000_0_001_00000001_0000;
          8'h40: DATA_out_r = 32'b001_000_001_0000_000_0_100_01000010_0000;
          8'h41: DATA_out_r = 32'b000_000_000_0000_000_0_001_00000001_0000;
          /* BE_Q: */
          8'h42: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h43: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h44: DATA_out_r = 32'b000_000_111_0000_000_0_001_00000001_0000;
          8'h48: DATA_out_r = 32'b000_000_000_0000_000_0_110_01001010_0000;
          8'h49: DATA_out_r = 32'b000_000_000_0000_000_0_001_00000001_0000;
          /* BM_I: */
          8'h4a: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h4b: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h4c: DATA_out_r = 32'b000_000_111_0000_000_0_001_00000001_0000;
          8'h50: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h51: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h52: DATA_out_r = 32'b000_000_111_0000_000_0_001_00000001_0000;
          8'h58: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h59: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h5a: DATA_out_r = 32'b001_000_001_0101_000_0_001_00000001_0000;
          8'h60: DATA_out_r = 32'b110_000_000_0000_000_0_000_00000000_0100;
          8'h61: DATA_out_r = 32'b111_000_000_0001_000_0_000_00000000_0010;
          8'h62: DATA_out_r = 32'b111_000_000_0001_000_0_000_00000000_0100;
          8'h63: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h64: DATA_out_r = 32'b000_000_111_0000_000_0_000_00000000_0000;
          8'h65: DATA_out_r = 32'b110_000_110_0001_000_0_001_00000001_0000;
          8'h68: DATA_out_r = 32'b110_000_110_0110_000_0_000_00000000_0000;
          8'h69: DATA_out_r = 32'b110_000_000_0000_000_0_000_00000000_0100;
          8'h6a: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h6b: DATA_out_r = 32'b000_000_111_0000_000_0_001_00000001_0000;
          8'h70: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h71: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h72: DATA_out_r = 32'b000_000_010_0000_000_0_001_00000001_0000;
          8'h78: DATA_out_r = 32'b010_000_010_0001_000_0_001_00000001_0000;
          8'h80: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h81: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h82: DATA_out_r = 32'b000_000_011_0000_000_0_000_00000000_0000;
          8'h83: DATA_out_r = 32'b011_010_100_0010_000_0_000_00000000_0000;
          8'h84: DATA_out_r = 32'b100_000_000_0000_000_0_000_00000000_0100;
          8'h85: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h86: DATA_out_r = 32'b000_001_001_0010_000_0_001_00000001_0000;
          8'h88: DATA_out_r = 32'b111_000_111_0001_000_0_000_00000000_0100;
          8'h89: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h8a: DATA_out_r = 32'b000_000_011_0000_000_0_000_00000000_0000;
          8'h8b: DATA_out_r = 32'b011_010_100_0010_000_0_000_00000000_0000;
          8'h8c: DATA_out_r = 32'b100_000_000_0000_000_0_000_00000000_0100;
          8'h8d: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h8e: DATA_out_r = 32'b001_000_001_0101_000_0_001_00000001_0000;
          8'h90: DATA_out_r = 32'b110_000_000_0000_000_0_000_00000000_0100;
          8'h91: DATA_out_r = 32'b001_000_000_0000_000_0_000_00000000_0010;
          8'h92: DATA_out_r = 32'b110_000_110_0001_000_0_001_00000001_0000;
          8'h98: DATA_out_r = 32'b110_000_110_0110_000_0_000_00000000_0000;
          8'h99: DATA_out_r = 32'b110_000_000_0000_000_0_000_00000000_0100;
          8'h9a: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0001;
          8'h9b: DATA_out_r = 32'b000_000_001_0000_000_0_001_00000001_0000;
          8'hff: DATA_out_r = 32'b000_000_000_0000_000_0_000_00000000_0000;
          default: DATA_out_r = 32'b0;
       endcase
     end
endmodule
